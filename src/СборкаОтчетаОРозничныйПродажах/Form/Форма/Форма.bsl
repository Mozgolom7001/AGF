
&НаКлиенте
Процедура ПолучитьПоЧекам(Команда)
	ПолучитьПоЧекамНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьПоЧекамНаСервере()
	
	ЗаполнитьТовары();
	ЗаполнитьОплатыПлатежнымиКартами();
	ЗаполнитьВозвраты();
	ЗаполнитьНаличныеОплаты();
	
КонецПроцедуры

// <Описание процедуры>
//
&НаСервере
Процедура ЗаполнитьНаличныеОплаты()

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЧекККМОплата.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
		|ГДЕ
		|	ЧекККМОплата.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЧекККМОплата.Ссылка.ВидОперации = &ВидОперацииПродажа
		|	И ЧекККМОплата.ВидОплаты = &ВидОплатыНаличные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ЧекККМОплата.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
		|ГДЕ
		|	ЧекККМОплата.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЧекККМОплата.Ссылка.ВидОперации = &ВидОперацииВозврат";
	
	Запрос.УстановитьПараметр("ВидОперацииВозврат", Перечисления.ВидыОперацийЧекККМ.Возврат);
	Запрос.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	Запрос.УстановитьПараметр("ВидОплатыНаличные", Справочники.ВидыОплатЧекаККМ.Наличные);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.ДатаСбораЧековККМ));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаСбораЧековККМ));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТЗ_ОплатыНаличными = РезультатЗапроса[0].Выгрузить();
	ТЗ_СуммыВозвратов = РезультатЗапроса[1].Выгрузить();
	
	Объект.СуммаВозвратов = ТЗ_СуммыВозвратов[0].Сумма;
	Объект.СуммаОплатНаличными = ТЗ_ОплатыНаличными[0].Сумма;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	

КонецПроцедуры // ЗаполнитьНаличныеОплаты()
 
// <Описание процедуры>
//
&НаСервере
Процедура ЗаполнитьВозвраты()

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМТовары.Номенклатура КАК Номенклатура,
		|	ЧекККМТовары.Характеристика КАК Характеристика,
		|	ЧекККМТовары.Количество КАК Количество,
		|	ЧекККМТовары.Цена КАК Цена,
		|	ЧекККМТовары.Сумма КАК Сумма,
		|	ЧекККМТовары.РегистрацияПродажи КАК РегистрацияПродажи,
		|	ЧекККМТовары.Склад КАК Склад,
		|	ЧекККМТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЧекККМТовары.СуммаНДС КАК СуммаНДС,
		|	ЧекККМТовары.Продавец КАК Продавец,
		|	ЧекККМТовары.Ссылка.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	ЧекККМТовары.Ссылка.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
		|	ЧекККМТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ЧекККМТовары.Упаковка КАК Упаковка,
		|	ЧекККМТовары.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		|ГДЕ
		|	ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЧекККМТовары.Ссылка.ВидОперации = &ВидОперации";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.ДатаСбораЧековККМ));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаСбораЧековККМ));
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Возврат);
	
	РезультатЗапроса = Запрос.Выполнить();
	
ТЗ_Возваты = РезультатЗапроса.Выгрузить();

Объект.ВозвращенныеТовары.Загрузить(ТЗ_Возваты);
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА 	

КонецПроцедуры // ЗаполнитьВозвраты()
 

// <Описание процедуры>
//
&НаСервере
Процедура ЗаполнитьОплатыПлатежнымиКартами()

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМОплата.ВидОплаты КАК ВидОплаты,
		|	ЧекККМОплата.Сумма КАК Сумма,
		|	ЧекККМОплата.ПроцентКомиссии КАК ПроцентКомиссии,
		|	ЧекККМОплата.СуммаКомиссии КАК СуммаКомиссии,
		|	ЧекККМОплата.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
		|	ЧекККМОплата.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента
		|ИЗ
		|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
		|ГДЕ
		|	ЧекККМОплата.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЧекККМОплата.ВидОплаты = &ВидОплаты";
	
	Запрос.УстановитьПараметр("ВидОплаты", Объект.ВидБезналичнойОплаты);
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(Объект.ДатаСбораЧековККМ));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаСбораЧековККМ));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ_Оплаты = РезультатЗапроса.Выгрузить();
	
	Объект.ОплатаПлатежнымиКартами.Загрузить(ТЗ_Оплаты);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	

КонецПроцедуры // ЗаполнитьОплатыПлатежнымиКартами()
 
// <Описание процедуры>
//
&НаСервере
Процедура ЗаполнитьТовары()

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМТовары.Номенклатура КАК Номенклатура,
		|	ЧекККМТовары.Характеристика КАК Характеристика,
		|	СУММА(ВЫБОР
		|			КОГДА ЧекККМТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(ПЕРЕЧиСЛЕНИЕ.ВидыОперацийЧекККМ.Возврат)
		|				ТОГДА -ЧекККМТовары.Количество
		|			ИНАЧЕ ЧекККМТовары.Количество
		|		КОНЕЦ) КАК Количество,
		|	СРЕДНЕЕ(ЧекККМТовары.Цена) КАК Цена,
		|	СУММА(ВЫБОР
		|			КОГДА ЧекККМТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(ПЕРЕЧиСЛЕНИЕ.ВидыОперацийЧекККМ.Возврат)
		|				ТОГДА -ЧекККМТовары.Сумма
		|			ИНАЧЕ ЧекККМТовары.Сумма
		|		КОНЕЦ) КАК Сумма,
		|	ЧекККМТовары.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ЧекККМТовары.СуммаНДС) КАК СуммаНДС,
		|	ЧекККМТовары.РегистрацияПродажи КАК РегистрацияПродажи,
		|	ЧекККМТовары.Склад КАК Склад,
		|	ЧекККМТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
		|	ЧекККМТовары.Продавец КАК Продавец,
		|	ЧекККМТовары.Ссылка.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	СУММА(ВЫБОР
		|			КОГДА ЧекККМТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(ПЕРЕЧиСЛЕНИЕ.ВидыОперацийЧекККМ.Возврат)
		|				ТОГДА -ЧекККМТовары.КоличествоУпаковок
		|			ИНАЧЕ ЧекККМТовары.КоличествоУпаковок
		|		КОНЕЦ) КАК КоличествоУпаковок,
		|	ЧекККМТовары.Упаковка КАК Упаковка,
		|	ЧекККМТовары.КлючСвязи КАК КлючСвязи,
		|	ЧекККМТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ЧекККМТовары.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЧекККМТовары.Резервировать КАК Резервировать,
		|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.РеализацияТоваров) КАК АналитикаХозяйственнойОперации
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		|ГДЕ
		|	ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	ЧекККМТовары.Номенклатура,
		|	ЧекККМТовары.Характеристика,
		|	ЧекККМТовары.СтавкаНДС,
		|	ЧекККМТовары.РегистрацияПродажи,
		|	ЧекККМТовары.Склад,
		|	ЧекККМТовары.КлючСвязиСерийныхНомеров,
		|	ЧекККМТовары.Продавец,
		|	ЧекККМТовары.Ссылка.ДисконтнаяКарта,
		|	ЧекККМТовары.Упаковка,
		|	ЧекККМТовары.СтатусУказанияСерий,
		|	ЧекККМТовары.ЗаказПокупателя,
		|	ЧекККМТовары.Резервировать,
		|	ЧекККМТовары.КлючСвязи";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.ДатаСбораЧековККМ));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.ДатаСбораЧековККМ));
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ_Товары = РезультатЗапроса.Выгрузить();
	
	Объект.Товары.Загрузить(ТЗ_Товары);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецПроцедуры // ЗаполнитьТовары()


&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	
	ОбъектДокумент = Объект.ДокументОтчет.ПолучитьОбъект();
	
	ОбъектДокумент.Товары.Загрузить(Объект.Товары.Выгрузить());
	ОбъектДокумент.ВозвращенныеТовары.Загрузить(Объект.ВозвращенныеТовары.Выгрузить());
	ОбъектДокумент.ОплатаПлатежнымиКартами.Загрузить(Объект.ОплатаПлатежнымиКартами.Выгрузить());
	ОбъектДокумент.СуммаВозвратов = Объект.СуммаВозвратов;
	ОбъектДокумент.СуммаОплатыНаличных = Объект.СуммаОплатНаличными;
	
	ОбъектДокумент.Записать();
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаСервере();
КонецПроцедуры
 